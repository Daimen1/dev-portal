I"@
<h1 id="guidelines-for-service-integration-in-singularitynet">Guidelines for service integration in SingularityNET</h1>

<p>These are guidelines to help SingularityNET developers to write/integrate new
AI services to the platform.</p>

<ul>
  <li><a href="#languages">Supported languages</a></li>
  <li><a href="#frameworks">AI frameworks</a></li>
  <li><a href="#thirdparty">Third-party code and models</a></li>
  <li><a href="#docs">Service documentation</a></li>
  <li><a href="#contributing">Contributing to existing projects</a></li>
</ul>

<h2 id="-supported-languages"><a name="languages"></a> Supported languages</h2>

<p>SingularityNET services use <a href="https://grpc.io/">gRPC</a> which is an open-source universal RPC
framework. So any new service must provide its API in gRPC.</p>

<p>gRPC supports several programming languages and a guide for each of them is
available <a href="https://grpc.io/docs/">here</a>.</p>

<ul>
  <li>C++</li>
  <li>Java</li>
  <li>Python</li>
  <li>Go</li>
  <li>Ruby</li>
  <li>C#</li>
  <li>Node.js</li>
  <li>Android Java</li>
  <li>Objective-C</li>
  <li>PHP</li>
</ul>

<p>There are tutorials with step-by-step instructions for implementing a new
service in each of these languages:</p>

<ul>
  <li><a href="/tutorials/cpp">How to write a SingularityNET service in C++</a></li>
  <li><a href="/tutorials/python">How to write a SingularityNET service in Python</a></li>
  <li><a href="/tutorials/java">How to write a SingularityNET service in Java</a></li>
  <li><a href="/tutorials/go">How to write a SingularityNET service in Go</a></li>
</ul>

<p>If you already have a gRPC service, this tutorial explains how to publish it in
SingularityNET:</p>

<ul>
  <li><a href="/tutorials/publish">How to publish a service</a></li>
</ul>

<p>Make sure you follow our <a href="/docs/concepts/naming-standards">naming standardisation guidelines</a>.</p>

<h2 id="-ai-frameworks"><a name="frameworks"></a> AI frameworks</h2>

<p>There are a couple of AI frameworks integrated to SingularityNET so you
can just add new functionalities to services which are already published.</p>

<ul>
  <li><a href="https://opencog.org/">Opencog</a>: an open-source software project aimed at directly
confronting the AGI challenge, using mathematical and biological inspiration
and professional software engineering techniques.</li>
</ul>

<p>There are tutorials with step-by-step instructions on how to extend the
existing AI framework service in order to implement new functionalities:</p>

<ul>
  <li><a href="/tutorials/opencog">How to write an Opencog service for SingularityNET</a></li>
</ul>

<h2 id="-third-party-code-and-models"><a name="thirdparty"></a> Third-party code and models</h2>

<p>Before publishing a service based on third-party code or model(s), make sure
you follow all the guidelines below.</p>

<ol>
  <li>The service is FREE.</li>
  <li>The main documentation of the service (e.g. README.md) mentions (crystal clear)
that the service is based on third-party work.</li>
  <li>The original work (code, paper, model etc) is clearly mentioned and properly
linked in README.</li>
  <li>The authors of the original code or model(s) are clearly mentioned
in README.</li>
  <li>Any licenses attached to the original work is mentioned in README.</li>
  <li>The terms of any license attached to the original work allows its use in
SNET.</li>
</ol>

<p>See <a href="https://github.com/singnet/dnn-model-services">this example</a> of third-party based service documentation which
is fully compliant with these guidelines.</p>

<h2 id="-service-documentation"><a name="docs"></a> Service documentation</h2>

<p>All the following documentation is mandatory for any service.</p>

<ol>
  <li><strong>README</strong> (see our recommended <a href="templates">templates</a>) describing the
structure of the repository and how to build/test the service. This is a sort
of “developer’s guide” aimed at people interested in extending or reusing the
service.</li>
  <li><strong>docs/index.html</strong> pointed by standard Github Pages describing how to use
the service. This is the “user’s guide” of your service.</li>
  <li><strong>LICENSE</strong> with SNET standard license.</li>
</ol>

<p>If you are extending an existing service. Follow any particular guidelines of
the specific project and make sure you update all the aforementioned documents
accordingly.</p>

<p>See <a href="https://github.com/singnet/opencog-services">this example</a> of service documentation which
is fully compliant with these guidelines.</p>

<h2 id="-contributing-to-existing-projects"><a name="contributing"></a> Contributing to existing projects</h2>

<p>SingularityNET have several AI service integration projects. See our
<a href="https://github.com/singnet">github</a> for a list of them. Before contributing to any of
thees, please read our <a href="/docs/guidelines">contribution guidelines</a>.</p>
:ET