I"π<blockquote>
  <p>NOTE: You can find the script files for this example on Github <a href="https://github.com/singnet/dev-portal/tree/master/src/example1">here</a></p>
</blockquote>

<h2 id="description">DESCRIPTION</h2>

<ul>
  <li>install_and_start.sh - install and setup everything and start a local network
and IPFS</li>
  <li>run_service.sh - register and start a simple service (one payment
group one endpoint)</li>
  <li>run_client.sh  - make a call to the service</li>
  <li>run_treasurer.sh - run treasurer server in order to see list
of claimed channels, and claim your channels</li>
</ul>

<p>Test should be run on a clean environment in the given order.</p>

<h2 id="run-tests-in-docker-container">Run tests in docker container</h2>

<h3 id="install-everything">Install everything</h3>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">#I. Download example scripts and make sure that scripts are in the current directory.</span>

git clone https://github.com/singnet/dev-portal
<span class="nb">cd </span>dev-portal/docs/all/mpe/front-to-back-examples/scripts/example1

<span class="c">#II. Run ubuntu:latest docker container and "mount" ./ to /example1</span>
docker run <span class="nt">-v</span> <span class="sb">`</span><span class="nb">pwd</span><span class="sb">`</span>:/example1 <span class="nt">-it</span> ubuntu:latest

<span class="c">#III. Now you are inside a docker container. We will install everything.</span>
<span class="nb">.</span> /example1/for_docker/install_all.sh
</code></pre></div></div>

<h3 id="create-docker-image-with-everything-installed-optional">Create docker image with everything installed (optional)</h3>

<p>At this point you can ‚Äúcommit‚Äù your docker container.</p>

<ol>
  <li>Open new terminal on your main system (without closing your docker container!)</li>
  <li>Using ‚Äúdocker ps‚Äù your get ‚Äúcontainer id‚Äù of your running container.</li>
  <li>Type ‚Äúdocker commit <container_id> $USER/snet_example1"</container_id></li>
</ol>

<p>After this you will be able to use $USER/snet_example1 instead of ubuntu:latest (without running install_all.sh)</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code># you should be inside example1 directory
#cd dev-portal/docs/all/mpe/front-to-back-examples/scripts/example1
docker run -v `pwd`:/example1 -it $USER/snet_example1
</code></pre></div></div>

<h3 id="register-and-run-example-service">Register and run example service</h3>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># reset environment</span>
<span class="nb">.</span> /example1/for_docker/reset_environment.sh

<span class="c"># register your service</span>
<span class="nb">.</span> /example1/run_service.sh
</code></pre></div></div>

<h3 id="run-client">Run client</h3>

<p>After running the service, the terminal will not return to you, so you will need to open a second terminal in your container.</p>

<ol>
  <li>You should open new terminal in your main system.</li>
  <li>You should get ‚Äúcontainer id‚Äù of your running container by typing ‚Äúdocker ps‚Äù</li>
  <li>You should type ‚Äúdocker exec -it <container_id> bash".</container_id></li>
</ol>

<p>And your can run your client</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">.</span> /example1/run_client.sh

<span class="c"># it should print "42.0"</span>
</code></pre></div></div>

<h3 id="run-treasurer">Run treasurer</h3>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">.</span> /example1/run_treasurer.sh
</code></pre></div></div>
:ET